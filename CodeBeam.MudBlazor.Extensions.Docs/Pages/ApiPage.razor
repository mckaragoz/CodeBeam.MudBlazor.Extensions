@page "/api"
@using MudBlazor.Extensions
@using System.Text.RegularExpressions
@using System.Security.Cryptography.X509Certificates
@using MudExtensions.Utilities
@inject MudExtensionsDocsService DocsService

<ExamplePage Title="API">

    <MudTextFieldExtended @bind-Value="_searchString" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" Immediate="true"
                          Variant="Variant.Outlined">
        <AdornmentEnd>
            <MudIcon Icon="@Icons.Material.Filled.Search" />
        </AdornmentEnd>                  
    </MudTextFieldExtended>

    @foreach (var component in _components)
    {
        if (component?.Title?.Contains(_searchString ?? string.Empty, StringComparison.CurrentCultureIgnoreCase) == true)
        {
            <ExampleCard Title="@($"Api - {component.Title.Replace("`1", null)}")" HasExpansionPanel="true">
                <DocsApiTable Type="component.Component" Component="component" />
            </ExampleCard>
        }
        
    }

</ExamplePage>

@code {
    private string? _searchString;
    List<MudExtensionComponentInfo> _components = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _components = DocsService.GetAllComponentInfo();
    }
}
